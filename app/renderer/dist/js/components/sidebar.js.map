{"version":3,"sources":["sidebar.jsx"],"names":["Sidebar","props","state","activeItem","subscribe","setActiveItem","bind","event","preventDefault","dispatch","id","setState","list","addPost","unsubscribe","searchChange","defaultProps","module","exports"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,O;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sHACTA,KADS;;AAEf,cAAKC,KAAL,GAAa;AACTC,wBAAY;AADH,SAAb;AAGA,cAAKC,SAAL,CAAe,oBAAf,EAAqC,MAAKC,aAAL,CAAmBC,IAAnB,OAArC;AALe;AAMlB;;;;gCAEOC,K,EAAO;AACXA,kBAAMC,cAAN;AACA,iBAAKC,QAAL,CAAc,UAAd;AACH;;;sCAEaC,E,EAAI;AACd,iBAAKC,QAAL,CAAc,EAAER,YAAYO,EAAd,EAAd;AACH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,SAAf;AACI,qEADJ;AAGI;AACI,0BAAM,KAAKT,KAAL,CAAWW,IADrB;AAEI,gCAAY,KAAKV,KAAL,CAAWC,UAF3B,GAHJ;AAOI;AAAA;AAAA,sBAAQ,SAAS,KAAKU,OAAL,CAAaP,IAAb,CAAkB,IAAlB,CAAjB;AAAA;AAAA;AAPJ,aADJ;AAWH;;;+CAEsB;AACnB,iBAAKQ,WAAL,CAAiB,eAAjB,EAAkC,KAAKC,YAAvC;AACA,iBAAKD,WAAL,CAAiB,oBAAjB,EAAuC,KAAKT,aAA5C;AACH;;;;;;AAGLL,QAAQgB,YAAR,GAAuB;AACnBJ,UAAM,EADa;AAEnBT,gBAAY;AAFO,CAAvB;;AAKAc,OAAOC,OAAP,GAAiBlB,OAAjB","file":"sidebar.js","sourcesContent":["import React from 'react';\nimport EventEmitter from './../eventEmitter.js';\nimport Search from './search.js';\nimport List from './list.js';\n\nclass Sidebar extends EventEmitter {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: false\n        };\n        this.subscribe('active-item-change', this.setActiveItem.bind(this));\n    }\n\n    addPost(event) {\n        event.preventDefault();\n        this.dispatch('item-add');\n    }\n\n    setActiveItem(id) {\n        this.setState({ activeItem: id });\n    }\n\n    render() {\n        return (\n            <div className=\"sidebar\">\n                <Search />\n\n                <List\n                    list={this.props.list}\n                    activeItem={this.state.activeItem} />\n\n                <button onClick={this.addPost.bind(this)}>Dodaj nowy wpis</button>\n            </div>\n        );\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe('search-change', this.searchChange);\n        this.unsubscribe('active-item-change', this.setActiveItem);\n    }\n}\n\nSidebar.defaultProps = {\n    list: [],\n    activeItem: false\n};\n\nmodule.exports = Sidebar;\n"]}