{"version":3,"sources":["login.jsx"],"names":["Login","props","state","loading","error","send","username","usernameField","value","password","passwordField","once","event","response","tokenRetrieved","setState","token","localStorage","setItem","user_display_name","user_id","dispatch","data","status","message","errorClasses","loaderClasses","overlayClasses","visible","node","getToken","bind","defaultProps","propTypes","bool","module","exports"],"mappings":"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","file":"login.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport {ipcRenderer} from 'electron';\nimport striptags from 'striptags';\nimport EventEmitter from './../eventEmitter.js';\n\nclass Login extends EventEmitter {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            error: ''\n        };\n    }\n\n    getToken() {\n        ipcRenderer.send('getToken', {\n            username: this.usernameField.value,\n            password: this.passwordField.value\n        });\n\n        ipcRenderer.once('getTokenResponse', (event, response) => {\n            this.tokenRetrieved(response);\n        });\n\n        this.setState({\n            loading: true\n        });\n    }\n\n    tokenRetrieved(response) {\n        this.setState((props, state) => {\n            if(response.token) {\n                localStorage.setItem('jwt-token', response.token);\n                localStorage.setItem('jwt-username', response.user_display_name);\n                localStorage.setItem('jwt-id', response.user_id);\n\n                this.dispatch('user-logged-in', response);\n\n                this.usernameField.value = '';\n                this.passwordField.value = '';\n\n                return {\n                    loading: false,\n                    error: ''\n                };\n            }\n\n            if(response.data.status === 403 || response.data.status === 500) {\n                return {\n                    loading: false,\n                    error: response.message\n                };\n            }\n\n            return {\n                loading: false,\n                error: ''\n            };\n        });\n    }\n\n    render() {\n        let errorClasses = classnames({\n            'login-error': true,\n            'is-visible': !!this.state.error\n        });\n\n        let loaderClasses = classnames({\n            'login-loader': true,\n            'is-visible': this.state.loading\n        });\n\n        let overlayClasses = classnames({\n            'login-overlay': true,\n            'is-visible': this.props.visible\n        });\n\n        return (\n            <div className={overlayClasses}>\n                <div className=\"login\">\n                    <h2>Zaloguj się</h2>\n\n                    <div className={errorClasses}>\n                        {striptags(this.state.error)}\n                    </div>\n\n                    <label>\n                        Nazwa użytkownika:\n                        <input\n                            type=\"text\"\n                            tabIndex=\"0\"\n                            defaultValue=\"\"\n                            ref={(node) => this.usernameField = node} />\n                    </label>\n\n                    <label>\n                        Hasło użytkownika:\n                        <input\n                            type=\"password\"\n                            tabIndex=\"1\"\n                            defaultValue=\"\"\n                            ref={(node) => this.passwordField = node} />\n                    </label>\n\n                    <input\n                        type=\"submit\"\n                        tabIndex=\"2\"\n                        onClick={this.getToken.bind(this)} />\n                </div>\n\n                <div className={loaderClasses}>Logowanie&hellip;</div>\n            </div>\n        );\n    }\n}\n\nLogin.defaultProps = {\n    visible: false,\n};\n\nLogin.propTypes = {\n    visible: PropTypes.bool\n};\n\nmodule.exports = Login;\n"]}